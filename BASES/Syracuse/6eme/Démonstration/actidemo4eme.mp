input constantes;
input geometriepoint;
beginfig(1);
  affixe.A(u*(0,1));
  affixe.B(u*(0.5,1));
  affixe.C(u*(7.5,1));
  affixe.D(u*(8,1));
  affixe.E(u*(8.5,1));
  draw droite(A,D,1);
  affixe.F(u*(0.25,0.5));
  affixe.G(z.D shifted (z.F-z.A));
  draw droite(A,D,1) shifted (z.F-z.A);
  draw segment(A,F);
  draw segment(E,G);
  draw z.B--(z.B shifted(z.F-z.A));
  affixe.H(z.B shifted (z.E-z.G));
  affixe.I(demidroite(B,H,50) intersectionpoint demidroite(G,D,50));
  draw segment(G,I);
  affixe.J(demidroite(B,I,2) intersectionpoint (demidroite(G,I,2) shifted (z.E-z.G)));
  draw segment(B,J);
  draw segment(B,J) shifted (z.A-z.B);
  draw z.I--(z.I shifted (z.A-z.B));
  draw z.J--(z.J shifted (z.A-z.B));
  draw segment(E,J);
  affixe.K((droite(A,E,2) shifted (z.H-z.A)) intersectionpoint (droite(E,J,2) shifted(z.C-z.E)));
  draw z.H--z.K;
  affixe.L(z.H shifted (z.B-z.A));
  affixe.M((droite(B,I,2) shifted (z.L-z.H)) intersectionpoint (droite(E,J,2) shifted(z.C-z.E)));
  draw z.C--z.M;
  affixe.N((droite(B,J,2) shifted (z.L-z.H)) intersectionpoint (droite(E,J,2) shifted(z.D-z.E)));
  draw z.L--z.N; 
endfig;
beginfig(2);
  affixe.A(u*(1,1));
  affixe.B(u*(5,1));
  affixe.C(z.A shifted(u*(0,2)));
  affixe.D(z.B shifted(u*(0,2)));
  draw (z.A shifted (u*(0.5,0.5)))--z.A--(z.A shifted (u*(0.5,-0.5)));
  draw z.A--z.B;
  draw (z.B shifted (u*(-0.5,0.5)))--z.B--(z.B shifted (u*(-0.5,-0.5)));
  draw (z.C shifted (u*(-0.5,0.5)))--z.C--(z.C shifted (u*(-0.5,-0.5)));
  draw z.C--z.D;
  draw (z.D shifted (u*(0.5,0.5)))--z.D--(z.D shifted (u*(0.5,-0.5)));
endfig;
beginfig(3);
  affixe.O(u*(2,3));
  affixe.D(u*(5,3));
  draw cercle(O,1.5cm);
  draw cercle(O,0.5cm);
  draw cercle(D,0.75cm);
  draw cercle(D,0.5cm);
endfig;
beginfig(4);
  affixe.A(u*(2.5,0));
  affixe.B(u*(4,7));
  draw segment(A,B) dashed evenly;
  affixe.C(u*(4,2));
  affixe.D(u*(6,2));
  draw segment(C,D) withpen pencircle scaled 1.5bp;
  affixe.E(u*(4,5));
  affixe.F(u*(6,5));
  draw segment(E,F) withpen pencircle scaled 1.5bp;
  affixe.G(u*(7.5,0));
  affixe.H(u*(6,7));
  draw segment(G,H) dashed evenly;
endfig;
beginfig(5);
  affixe.A(u*(0,4));
  affixe.B(u*(2,-5));
  affixe.C(u*(2,13));
  affixe.D(z.A reflectedabout(z.B,z.C));
  affixe.E(u*(1,0));
  affixe.F(z.E shifted (z.C-z.B));
  path cc;
  cc=segment(E,F);
  draw cc withpen pencircle scaled 3bp;
  draw cc reflectedabout(z.B,z.C) withpen pencircle scaled 3bp;
  for j=0 upto 20:
    draw z.A--(j/20)[z.B,z.C]--z.D;
  endfor
  clip currentpicture to (0,0)--(8u,0)--(8u,8u)--(0,8u)--cycle;
endfig;
beginfig(6);
  affixe.A(u*(3,2));label.top(btex $A$ etex,z.A);
  affixe.B(u*(4,0));label.bot(btex $B $etex,z.B);
  affixe.C(z.A rotatedabout(z.B,-90));label.top(btex $C$ etex,z.C);
  draw z.A--z.B--z.C;
  affixe.H(0.2[z.C,z.A]);
  draw z.B--z.H;
  affixe.D(z.A shifted (z.B-z.H));
  affixe.E(z.C shifted (z.B-z.H));
  draw z.A--z.C--z.E--z.D--cycle;
endfig;
beginfig(7);
  affixe.A(u*(1,1));
  affixe.B(u*(6,1));
  affixe.C(u*(6,6));
  affixe.D(u*(1,6));
  draw z.A--z.B--z.C--z.D--cycle;
  affixe.O(1/2[z.A,z.C]);
  draw cercle(O,0.5cm);
  draw cercle(O,0.75cm);
  draw cercle(O,1cm);
  draw cercle(O,1.25cm);
  draw cercle(O,1.625cm);
  draw cercle(O,2cm);
  draw cercle(O,2.5cm);
  draw cercle(O,3cm);
  draw cercle(O,3.5cm);
  draw cercle(O,4cm);
  draw cercle(O,4.5cm);
endfig;
beginfig(8);
  affixe.A(u*(0,1.9));
  draw cercle(A,0.1cm);
  affixe.B(u*(0.5,1.8));
  draw cercle(B,0.2cm);
  affixe.C(u*(1.2,1.6));
  draw cercle(C,0.4cm);
  affixe.D(u*(2.4,1.3));
  draw cercle(D,0.7cm);
  affixe.E(u*(4.3,0.9));
  draw cercle(E,1.1cm);
  affixe.F(u*(7,0.4));
  draw cercle(F,1.6cm);
  picture sym;
  sym=currentpicture reflectedabout(z.F,z.F shifted(u*(0,1)));
  draw sym;
endfig;
beginfig(9);
  affixe.A(u*(0,0));
  affixe.B(u*(1,0));
  affixe.C(u*(1,1));
  affixe.D(u*(0,1));
  path carre;
  carre=z.A--z.B--z.C--z.D--cycle;
  fill carre withcolor noir;
  picture case;
  case=currentpicture;
  currentpicture:=nullpicture;
  pair vh,vv;
  vh=u*(1.1,0);
  vv=u*(0,1.1);
  for j=0 upto 3:
    for k=0 upto 3:
      draw case shifted (j*vh+k*vv);
    endfor;
  endfor
endfig;
end